rules:
  - id: not.exist.function.create.render.root
    not:
      pattern:
        regexp: createRenderRoot\(\)([\s\S]*?) return this;([\s\S]*?)}
    message: |
      Please add createRenderRoot function to this file
      ex: createRenderRoot() {
        return this;
      }
    glob: "**/index.ts"

  - id: not.exist.style.tag
    not:
      pattern:
        regexp: return html([\s\S]*?)<style>([\s\S]*?)
    message: |
      Please describe style tag inside HTML to perform the styling.
      ex: render() {
        return html`
          <style>
            kuc-component {
              display: inline-block;
            }
          </style>
        `;
      }
    glob: "**/index.ts"

  - id: dom.structure.label
    pattern:
      regexp: (class=("kuc-[^<>]+__label"))(?!.*?(id=\"\${this._GUID\}-label\"))
    message: |
      Please put uuid using _generateGUID function to label
      ex: <div
            class="kuc-multi-choice__label"
            id="${this._GUID}-label">
          </div>
    glob: "**.ts"

  - id: dom.structure.error
    pattern:
      regexp: (class=("kuc-[^<>]+__error"))(?!.*?(id=\"\${this._GUID\}-error\"))
    message: |
      Please put uuid using _generateGUID function to error
      ex: <div
            class="kuc-multi-choice__error"
            id="${this._GUID}-error">
          </div>
    glob: "**.ts"